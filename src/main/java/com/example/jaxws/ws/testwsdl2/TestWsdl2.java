package com.example.jaxws.ws.testwsdl2;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.8
 * 2023-01-27T23:38:25.338+01:00
 * Generated source version: 3.3.8
 *
 */
@WebServiceClient(name = "TestWsdl2",
                  wsdlLocation = "classpath:test-wsdl2.wsdl",
                  targetNamespace = "http://testwsdl2.ws.jaxws.example.com")
public class TestWsdl2 extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://testwsdl2.ws.jaxws.example.com", "TestWsdl2");
    public final static QName TestWsdl2PortTypePort = new QName("http://testwsdl2.ws.jaxws.example.com", "testWsdl2PortTypePort");
    static {
        URL url = TestWsdl2.class.getClassLoader().getResource("test-wsdl2.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(TestWsdl2.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:test-wsdl2.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public TestWsdl2(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TestWsdl2(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TestWsdl2() {
        super(WSDL_LOCATION, SERVICE);
    }

    public TestWsdl2(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public TestWsdl2(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public TestWsdl2(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns TestWsdl2PortType
     */
    @WebEndpoint(name = "testWsdl2PortTypePort")
    public TestWsdl2PortType getTestWsdl2PortTypePort() {
        return super.getPort(TestWsdl2PortTypePort, TestWsdl2PortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TestWsdl2PortType
     */
    @WebEndpoint(name = "testWsdl2PortTypePort")
    public TestWsdl2PortType getTestWsdl2PortTypePort(WebServiceFeature... features) {
        return super.getPort(TestWsdl2PortTypePort, TestWsdl2PortType.class, features);
    }

}
